{
  "name": "juvix-mode",
  "version": "0.0.6",
  "license": "AGPL-3.0",
  "description": "Juvix IDE support for VSCode",
  "displayName": "juvix-mode",
  "publisher": "Heliax",
  "icon": "assets/tara.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/anoma/vscode-juvix-mode.git"
  },
  "bugs": {
    "url": "https://github.com/anoma/vscode-juvix/issues"
  },
  "directories": {
    "test": "test"
  },
  "engines": {
    "vscode": "^1.66.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "keywords": [
    "juvix",
    "language",
    "programming"
  ],
  "galleryBanner": {
    "theme": "light"
  },
  "scripts": {
    "vscode:prepublish": "npm run -S esbuild-base -- --minify",
    "package": "vsce package -o juvix-mode.vsix",
    "esbuild-base": "rimraf out && esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "build": "npm run -S esbuild-base -- --sourcemap",
    "watch": "npm run -S esbuild-base -- --sourcemap --watch",
    "fix": "prettier --write . && eslint -c .eslintrc.js --ext ts ./src  --fix",
    "test": "eslint src --ext ts && tsc --noEmit",
    "upgrade-dependencies": "ncu -u"
  },
  "main": "./out/extension.js",
  "extensionDependencies": [],
  "devDependencies": {
    "@types/node": "^18.6.5",
    "@types/vscode": "^1.66.0",
    "eslint": "^8.21.0",
    "npm-run-all": "^4.1.5",
    "tsc-watch": "^5.0.3",
    "typescript": "^4.7.4",
    "@typescript-eslint/eslint-plugin": "^5.33.0",
    "@typescript-eslint/parser": "^5.33.0",
    "esbuild": "^0.15.0",
    "eslint-plugin-header": "^3.1.1",
    "prettier": "^2.7.1",
    "rimraf": "^3.0.2",
    "vscode-dts": "^0.3.3",
    "@vscode/test-electron": "^1.6.1",
    "vscode-test-adapter-api": "^1.9.0",
    "vsce": "^2.9.2"
  },
  "prettier": {
    "printWidth": 80,
    "tabWidth": 2,
    "arrowParens": "avoid",
    "semi": true,
    "singleQuote": true,
    "bracketSpacing": true
  },
  "activationEvents": [
    "onLanguage:Juvix",
    "workspaceContains:**/juvix-mode.yaml",
    "workspaceContains:**/*.juvix"
  ],
  "editor.semanticHighlighting.enabled": true,
  "contributes": {
    "configurationDefaults": {
      "[Juvix]": {
        "editor.insertSpaces": false
      },
      "editor.semanticTokenColorCustomizations": {
        "enabled": true,
        "rules": {
          "axiom": {
            "foreground": "#f07171"
          },
          "comment": {
            "foreground": "#8b2252",
            "fontStyle": "italic"
          },
          "constructor": {
            "foreground": "#a37acc",
            "fontStyle": "italic"
          },
          "error": {
            "foreground": "#bd3744",
            "fontStyle": "bold"
          },
          "function": {
            "foreground": "#f2ae49"
          },
          "inductive": {
            "foreground": "#86b300",
            "fontStyle": "italic"
          },
          "keyword": {
            "foreground": "#399ee6",
            "fontStyle": "italic"
          },
          "module": {
            "foreground": "#4e5e78"
          },
          "number": {
            "foreground": "#8c48d0",
            "fontStyle": "italic"
          },
          "string": {
            "foreground": "#f07171",
            "fontStyle": "italic"
          }
        }
      }
    },
    "snippets": [
      {
        "language": "Juvix",
        "path": "./snippets/Juvix.json"
      }
    ],
    "languages": [
      {
        "id": "Juvix",
        "extensions": [
          ".juvix"
        ],
        "aliases": [
          "juvix"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "semanticTokenScopes": [],
    "taskDefinitions": [
      {
        "type": "Juvix",
        "required": [
          "command"
        ],
        "properties": {
          "command": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "juvixerror",
        "owner": "juvixerror",
        "source": "Juvix Error",
        "fileLocation": [
          "autoDetect",
          "${workspaceFolder}"
        ],
        "pattern": [
          {
            "kind": "location",
            "regexp": "^(.+):(\\d+):(\\d+)-(\\d+): (\\w+).*",
            "file": 1,
            "line": 2,
            "column": 3,
            "endColumn": 4,
            "severity": 5
          },
          {
            "regexp": "(.*)",
            "message": 1,
            "loop": true
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "juvix-mode.getBinaryVersion",
        "title": "about",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.typecheck",
        "title": "typecheck",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.compile",
        "title": "compile",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.run",
        "title": "run",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.internal-parse",
        "title": "[internal] parse",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "command": "juvix-mode.internal-scope",
        "title": "[internal] scope",
        "category": "Juvix",
        "when": "editorLangId == Juvix && editorTextFocus"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+c ctrl+l",
        "command": "juvix-mode.typecheck",
        "args": "Juvix: typecheck",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "key": "ctrl+c ctrl+c",
        "command": "juvix-mode.compile",
        "args": "Juvix: compile",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "key": "ctrl+c ctrl+r",
        "command": "juvix-mode.run",
        "args": "Juvix: run",
        "when": "editorLangId == Juvix && editorTextFocus"
      },
      {
        "key": "alt+,",
        "command": "workbench.action.navigateBack"
      },
      {
        "key": "alt+.",
        "command": "workbench.action.navigateForward"
      }
    ],
    "submenus": [
      {
        "id": "juvix-submenu",
        "label": "Juvix Tasks",
        "icon": "üõ†Ô∏è "
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "juvix-submenu",
          "group": "navigation"
        }
      ],
      "juvix-submenu": [
        {
          "command": "juvix-mode.typecheck",
          "group": "navigation"
        },
        {
          "command": "juvix-mode.compile",
          "group": "navigation"
        },
        {
          "command": "juvix-mode.run",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "Juvix Mode",
      "properties": {
        "juvix-mode.exec.version": {
          "type": "string",
          "default": "juvix",
          "scope": "machine-overridable",
          "description": "Name of the executable of Juvix."
        },
        "juvix-mode.exec.path": {
          "type": "string",
          "default": "",
          "scope": "machine-overridable",
          "description": "Path to the executable of Juvix."
        },
        "juvix-mode.exec.CLIOptions": {
          "type": "string",
          "default": "--only-errors",
          "scope": "machine-overridable",
          "description": "Command-line options for Juvix delimited by space."
        },
        "juvix-mode.backend": {
          "type": "string",
          "default": "C",
          "enum": [
            "C",
            "Haskell",
            "Html"
          ],
          "scope": "machine-overridable",
          "description": "Backend"
        }
      }
    }
  },
  "__metadata": {
    "id": "a5e2256d-697e-4c7e-bf3d-96779842b982",
    "publisherDisplayName": "Heliax",
    "publisherId": "9e6dae1a-f8fb-4b28-b2c6-bf8cc8ea4f11",
    "isPreReleaseVersion": false
  }
}